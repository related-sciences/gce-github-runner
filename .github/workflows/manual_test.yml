name: Manual test

on:
  workflow_dispatch:
    inputs:
      machine_zone:
        description: GCE zone
        default: "us-east1-c"
        required: true
      machine_type:
        description: "GCE machine type: https://cloud.google.com/compute/docs/machine-types"
        default: "n1-standard-4"
        required: true
      disk_size:
        description: VM disk size.
        required: false
      runner_service_account:
        description: Service account of the VM, defaults to default compute service account.
        required: false
      shutdown_timeout:
        description: "Grace period for the `stop` command, in seconds."
        default: 30
        required: true
      no_external_address:
        description: Disables external IP address for the worker
        default: false
        required: true
      actions_preinstalled:
        description: "Whether the GitHub actions have already been installed at `/actions-runner`."
        default: "false"
        required: true

jobs:
  create-runner:
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.create-runner.outputs.label }}
    steps:
      - id: create-runner
        uses: related-sciences/gce-github-runner@main
        with:
          token: ${{ secrets.GH_SA_TOKEN }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          machine_zone: ${{ inputs.machine_zone }}
          machine_type: ${{ inputs.machine_type }}
          disk_size: ${{ inputs.disk_size }}
          runner_service_account: ${{ inputs.runner_service_account }}
          image_project: ubuntu-os-cloud
          image_family: ubuntu-2004-lts
          no_external_address: ${{ inputs.no_external_address }}
          actions_preinstalled: ${{ inputs.actions_preinstalled }}

  test:
    needs: create-runner
    runs-on: ${{ needs.create-runner.outputs.label }}
    steps:
      - run: echo "This runs on the GCE runner VM"
      - uses: related-sciences/gce-github-runner@main
        with:
          command: stop
          shutdown_timeout: ${{ inputs.shutdown_timeout }}
        if: always()
